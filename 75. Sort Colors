(Medium)
语言：python 

题目：
  给定一个包含红色、白色和蓝色、共 n 个元素的数组 nums ，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
  我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。
  必须在不使用库的sort函数的情况下解决这个问题。

示例 1：
  输入：nums = [2,0,2,1,1,0]
  输出：[0,0,1,1,2,2]

这是一道经典的荷兰国旗问题，对0,1,2,三种数字进行排序即可

首先复习一下快排的写法：
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        lo,hi = 0,len(nums)-1
        self.quicksort(nums,lo,hi)
    def quicksort(self,nums,l,r):
        if l<r:
            i,j,flag = l,r,nums[l]
            while i<j:
                while i<j and flag<=nums[j]:
                    j -=1
                if i<j:
                    nums[i] = nums[j]
                    i += 1
                while i<j and nums[i]<flag:
                    i +=1
                if i<j:
                    nums[j] = nums[i]
                    j -= 1
            nums[i] = flag
            self.quicksort(nums,l,i-1)
            self.quicksort(nums,i+1,r)
            
这里如果使用快排的话时间复杂度为O(NlogN)，反而没有直接排序的效率高。但是可以作为熟悉快排的写法练习

如果我们使用一个指针指向数组的头部，遍历整个数组，只要找到0就往前放，这样的时间复杂度也只有0(N)
解法二：
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        n,ptr = len(nums),0
        for i in range(n):
            if nums[i] == 0:
                nums[i],nums[ptr] = nums[ptr],nums[i]
                ptr += 1
        for i in range(ptr,n):
            if nums[i] == 1:
                nums[i],nums[ptr] = nums[ptr],nums[i]
                ptr += 1
                
                
方法二需要进行两次遍历，我们可以额外使用一个指针，即使用两个指针分别用来交换 0 和 2。
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        p0,p2 = 0,len(nums)-1
        i = 0
        while i<=p2:
            while i<=p2 and nums[i] == 2:      #用while是为了防止后面的数还是2被换到了头部
                nums[i],nums[p2] = nums[p2],nums[i]
                p2 -= 1
            if nums[i] == 0:
                nums[i],nums[p0] = nums[p0],nums[i]
                p0 += 1
            i += 1
