(Easy)
语言：Python

题目：
  给你一个非负整数 x ，计算并返回 x 的 算术平方根 。
  由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。
  注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。
  
这道题比较简单，如果使用正常的遍历也是可以实现的，但是最差情况下就需要O(N)的时间复杂度。这时候就要想到在
查找中比较常用的二分查找。
使用二分查找的时间复杂度会变成O(logN)

解法一：
class Solution:
    def mySqrt(self, x: int) -> int:
        l,r,ans = 0,x,0
        while l<=r:
            mid = (l+r)//2
            if mid*mid<=x:
                ans = mid
                l = mid+1
            else:
                r = mid-1
        return ans


LeetCode题解中有使用数值分析中牛顿迭代法进行计算的，这种方法特别巧妙，我搬运过来仅供参考
解法二：
class Solution:
    def mySqrt(self, x: int) -> int:
        if x == 0:
            return 0
        
        C, x0 = float(x), float(x)
        while True:
            xi = 0.5 * (x0 + C / x0)
            if abs(x0 - xi) < 1e-7:
                break
            x0 = xi
        
        return int(x0)

作者：LeetCode-Solution
链接：https://leetcode-cn.com/problems/sqrtx/solution/x-de-ping-fang-gen-by-leetcode-solution/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
