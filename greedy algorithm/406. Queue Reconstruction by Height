（medium）
语言：Python
题目：
  假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。
  每个people[i] = [hi,ki]表示第 i 个人的身高为 hi ，前面正好有ki个身高大于或等于hi的人。
  请你重新构造并返回输入数组 people 所表示的队列。返回的队列应该格式化为数组 queue ，其中 queue[j] = [hj, kj] 是队列中第 j 个人的属性（queue[0] 是排在队列前面的人）。

示例 1：

  输入：people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]
  输出：[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]
  解释：
    编号为 0 的人身高为 5 ，没有身高更高或者相同的人排在他前面。
    编号为 1 的人身高为 7 ，没有身高更高或者相同的人排在他前面。
    编号为 2 的人身高为 5 ，有 2 个身高更高或者相同的人排在他前面，即编号为 0 和 1 的人。
    编号为 3 的人身高为 6 ，有 1 个身高更高或者相同的人排在他前面，即编号为 1 的人。
    编号为 4 的人身高为 4 ，有 4 个身高更高或者相同的人排在他前面，即编号为 0、1、2、3 的人。
    编号为 5 的人身高为 7 ，有 1 个身高更高或者相同的人排在他前面，即编号为 1 的人。
    因此 [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] 是重新构造后的队列。

解题思路：
  一般这种数对，还涉及排序的，根据第一个元素正向排序，根据第二个元素反向排序，或者根据第一个元素反向排序，根据第二个元素正向排序，往往能够简化解题过程。
  对于Python语法，即使用 sorted(key=lambda x:(-x[0],x[1])

解法：
class Solution:
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:
        people.sort(key=lambda x:(-x[0],x[1]))  #根据第一个元素降序排，根据第二个元素升序排
        res = []
        for p in people:
            if len(res)<=p[1]:   #当res内个数小于p[1]时，表示将p放进res中符合逻辑
                res.append(p)
            elif len(res)>p[1]:
                res.insert(p[1],p)
        return res
        
这里使用了先排序后插入的操作，排序完成后遍历每个元素，当res内个数比p[1]小或相等时，此时在加入p满足条件，否则就要插入到满足条件的那个位置



